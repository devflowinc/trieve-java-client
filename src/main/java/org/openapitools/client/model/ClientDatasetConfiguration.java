/*
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import javax.validation.constraints.*;
import javax.validation.Valid;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClientDatasetConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-29T12:28:22.088024700-05:00[America/Chicago]", comments = "Generator version: 7.4.0")
public class ClientDatasetConfiguration {
  public static final String SERIALIZED_NAME_C_R_E_A_T_E_C_H_U_N_K_F_E_A_T_U_R_E = "CREATE_CHUNK_FEATURE";
  @SerializedName(SERIALIZED_NAME_C_R_E_A_T_E_C_H_U_N_K_F_E_A_T_U_R_E)
  private Boolean CREATE_CHUNK_FEATURE;

  public static final String SERIALIZED_NAME_D_A_T_E_R_A_N_G_E_V_A_L_U_E = "DATE_RANGE_VALUE";
  @SerializedName(SERIALIZED_NAME_D_A_T_E_R_A_N_G_E_V_A_L_U_E)
  private String DATE_RANGE_VALUE;

  public static final String SERIALIZED_NAME_D_O_C_U_M_E_N_T_U_P_L_O_A_D_F_E_A_T_U_R_E = "DOCUMENT_UPLOAD_FEATURE";
  @SerializedName(SERIALIZED_NAME_D_O_C_U_M_E_N_T_U_P_L_O_A_D_F_E_A_T_U_R_E)
  private Boolean DOCUMENT_UPLOAD_FEATURE;

  public static final String SERIALIZED_NAME_F_I_L_E_N_A_M_E_K_E_Y = "FILE_NAME_KEY";
  @SerializedName(SERIALIZED_NAME_F_I_L_E_N_A_M_E_K_E_Y)
  private String FILE_NAME_KEY;

  public static final String SERIALIZED_NAME_F_I_L_T_E_R_I_T_E_M_S = "FILTER_ITEMS";
  @SerializedName(SERIALIZED_NAME_F_I_L_T_E_R_I_T_E_M_S)
  private Object FILTER_ITEMS = null;

  public static final String SERIALIZED_NAME_F_R_O_N_T_M_A_T_T_E_R_V_A_L_S = "FRONTMATTER_VALS";
  @SerializedName(SERIALIZED_NAME_F_R_O_N_T_M_A_T_T_E_R_V_A_L_S)
  private String FRONTMATTER_VALS;

  public static final String SERIALIZED_NAME_I_M_A_G_E_R_A_N_G_E_E_N_D_K_E_Y = "IMAGE_RANGE_END_KEY";
  @SerializedName(SERIALIZED_NAME_I_M_A_G_E_R_A_N_G_E_E_N_D_K_E_Y)
  private String IMAGE_RANGE_END_KEY;

  public static final String SERIALIZED_NAME_I_M_A_G_E_R_A_N_G_E_S_T_A_R_T_K_E_Y = "IMAGE_RANGE_START_KEY";
  @SerializedName(SERIALIZED_NAME_I_M_A_G_E_R_A_N_G_E_S_T_A_R_T_K_E_Y)
  private String IMAGE_RANGE_START_KEY;

  public static final String SERIALIZED_NAME_L_I_N_E_S_B_E_F_O_R_E_S_H_O_W_M_O_R_E = "LINES_BEFORE_SHOW_MORE";
  @SerializedName(SERIALIZED_NAME_L_I_N_E_S_B_E_F_O_R_E_S_H_O_W_M_O_R_E)
  private Integer LINES_BEFORE_SHOW_MORE;

  public static final String SERIALIZED_NAME_S_E_A_R_C_H_Q_U_E_R_I_E_S = "SEARCH_QUERIES";
  @SerializedName(SERIALIZED_NAME_S_E_A_R_C_H_Q_U_E_R_I_E_S)
  private String SEARCH_QUERIES;

  public static final String SERIALIZED_NAME_S_U_G_G_E_S_T_E_D_Q_U_E_R_I_E_S = "SUGGESTED_QUERIES";
  @SerializedName(SERIALIZED_NAME_S_U_G_G_E_S_T_E_D_Q_U_E_R_I_E_S)
  private String SUGGESTED_QUERIES;

  public ClientDatasetConfiguration() {
  }

  public ClientDatasetConfiguration CREATE_CHUNK_FEATURE(Boolean CREATE_CHUNK_FEATURE) {
    this.CREATE_CHUNK_FEATURE = CREATE_CHUNK_FEATURE;
    return this;
  }

   /**
   * Get CREATE_CHUNK_FEATURE
   * @return CREATE_CHUNK_FEATURE
  **/
  @javax.annotation.Nullable

  public Boolean getCREATECHUNKFEATURE() {
    return CREATE_CHUNK_FEATURE;
  }

  public void setCREATECHUNKFEATURE(Boolean CREATE_CHUNK_FEATURE) {
    this.CREATE_CHUNK_FEATURE = CREATE_CHUNK_FEATURE;
  }


  public ClientDatasetConfiguration DATE_RANGE_VALUE(String DATE_RANGE_VALUE) {
    this.DATE_RANGE_VALUE = DATE_RANGE_VALUE;
    return this;
  }

   /**
   * Get DATE_RANGE_VALUE
   * @return DATE_RANGE_VALUE
  **/
  @javax.annotation.Nullable

  public String getDATERANGEVALUE() {
    return DATE_RANGE_VALUE;
  }

  public void setDATERANGEVALUE(String DATE_RANGE_VALUE) {
    this.DATE_RANGE_VALUE = DATE_RANGE_VALUE;
  }


  public ClientDatasetConfiguration DOCUMENT_UPLOAD_FEATURE(Boolean DOCUMENT_UPLOAD_FEATURE) {
    this.DOCUMENT_UPLOAD_FEATURE = DOCUMENT_UPLOAD_FEATURE;
    return this;
  }

   /**
   * Get DOCUMENT_UPLOAD_FEATURE
   * @return DOCUMENT_UPLOAD_FEATURE
  **/
  @javax.annotation.Nullable

  public Boolean getDOCUMENTUPLOADFEATURE() {
    return DOCUMENT_UPLOAD_FEATURE;
  }

  public void setDOCUMENTUPLOADFEATURE(Boolean DOCUMENT_UPLOAD_FEATURE) {
    this.DOCUMENT_UPLOAD_FEATURE = DOCUMENT_UPLOAD_FEATURE;
  }


  public ClientDatasetConfiguration FILE_NAME_KEY(String FILE_NAME_KEY) {
    this.FILE_NAME_KEY = FILE_NAME_KEY;
    return this;
  }

   /**
   * Get FILE_NAME_KEY
   * @return FILE_NAME_KEY
  **/
  @javax.annotation.Nonnull
  @NotNull

  public String getFILENAMEKEY() {
    return FILE_NAME_KEY;
  }

  public void setFILENAMEKEY(String FILE_NAME_KEY) {
    this.FILE_NAME_KEY = FILE_NAME_KEY;
  }


  public ClientDatasetConfiguration FILTER_ITEMS(Object FILTER_ITEMS) {
    this.FILTER_ITEMS = FILTER_ITEMS;
    return this;
  }

   /**
   * Get FILTER_ITEMS
   * @return FILTER_ITEMS
  **/
  @javax.annotation.Nullable

  public Object getFILTERITEMS() {
    return FILTER_ITEMS;
  }

  public void setFILTERITEMS(Object FILTER_ITEMS) {
    this.FILTER_ITEMS = FILTER_ITEMS;
  }


  public ClientDatasetConfiguration FRONTMATTER_VALS(String FRONTMATTER_VALS) {
    this.FRONTMATTER_VALS = FRONTMATTER_VALS;
    return this;
  }

   /**
   * Get FRONTMATTER_VALS
   * @return FRONTMATTER_VALS
  **/
  @javax.annotation.Nullable

  public String getFRONTMATTERVALS() {
    return FRONTMATTER_VALS;
  }

  public void setFRONTMATTERVALS(String FRONTMATTER_VALS) {
    this.FRONTMATTER_VALS = FRONTMATTER_VALS;
  }


  public ClientDatasetConfiguration IMAGE_RANGE_END_KEY(String IMAGE_RANGE_END_KEY) {
    this.IMAGE_RANGE_END_KEY = IMAGE_RANGE_END_KEY;
    return this;
  }

   /**
   * Get IMAGE_RANGE_END_KEY
   * @return IMAGE_RANGE_END_KEY
  **/
  @javax.annotation.Nullable

  public String getIMAGERANGEENDKEY() {
    return IMAGE_RANGE_END_KEY;
  }

  public void setIMAGERANGEENDKEY(String IMAGE_RANGE_END_KEY) {
    this.IMAGE_RANGE_END_KEY = IMAGE_RANGE_END_KEY;
  }


  public ClientDatasetConfiguration IMAGE_RANGE_START_KEY(String IMAGE_RANGE_START_KEY) {
    this.IMAGE_RANGE_START_KEY = IMAGE_RANGE_START_KEY;
    return this;
  }

   /**
   * Get IMAGE_RANGE_START_KEY
   * @return IMAGE_RANGE_START_KEY
  **/
  @javax.annotation.Nullable

  public String getIMAGERANGESTARTKEY() {
    return IMAGE_RANGE_START_KEY;
  }

  public void setIMAGERANGESTARTKEY(String IMAGE_RANGE_START_KEY) {
    this.IMAGE_RANGE_START_KEY = IMAGE_RANGE_START_KEY;
  }


  public ClientDatasetConfiguration LINES_BEFORE_SHOW_MORE(Integer LINES_BEFORE_SHOW_MORE) {
    this.LINES_BEFORE_SHOW_MORE = LINES_BEFORE_SHOW_MORE;
    return this;
  }

   /**
   * Get LINES_BEFORE_SHOW_MORE
   * minimum: 0
   * @return LINES_BEFORE_SHOW_MORE
  **/
  @javax.annotation.Nullable
 @Min(0)
  public Integer getLINESBEFORESHOWMORE() {
    return LINES_BEFORE_SHOW_MORE;
  }

  public void setLINESBEFORESHOWMORE(Integer LINES_BEFORE_SHOW_MORE) {
    this.LINES_BEFORE_SHOW_MORE = LINES_BEFORE_SHOW_MORE;
  }


  public ClientDatasetConfiguration SEARCH_QUERIES(String SEARCH_QUERIES) {
    this.SEARCH_QUERIES = SEARCH_QUERIES;
    return this;
  }

   /**
   * Get SEARCH_QUERIES
   * @return SEARCH_QUERIES
  **/
  @javax.annotation.Nullable

  public String getSEARCHQUERIES() {
    return SEARCH_QUERIES;
  }

  public void setSEARCHQUERIES(String SEARCH_QUERIES) {
    this.SEARCH_QUERIES = SEARCH_QUERIES;
  }


  public ClientDatasetConfiguration SUGGESTED_QUERIES(String SUGGESTED_QUERIES) {
    this.SUGGESTED_QUERIES = SUGGESTED_QUERIES;
    return this;
  }

   /**
   * Get SUGGESTED_QUERIES
   * @return SUGGESTED_QUERIES
  **/
  @javax.annotation.Nullable

  public String getSUGGESTEDQUERIES() {
    return SUGGESTED_QUERIES;
  }

  public void setSUGGESTEDQUERIES(String SUGGESTED_QUERIES) {
    this.SUGGESTED_QUERIES = SUGGESTED_QUERIES;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientDatasetConfiguration clientDatasetConfiguration = (ClientDatasetConfiguration) o;
    return Objects.equals(this.CREATE_CHUNK_FEATURE, clientDatasetConfiguration.CREATE_CHUNK_FEATURE) &&
        Objects.equals(this.DATE_RANGE_VALUE, clientDatasetConfiguration.DATE_RANGE_VALUE) &&
        Objects.equals(this.DOCUMENT_UPLOAD_FEATURE, clientDatasetConfiguration.DOCUMENT_UPLOAD_FEATURE) &&
        Objects.equals(this.FILE_NAME_KEY, clientDatasetConfiguration.FILE_NAME_KEY) &&
        Objects.equals(this.FILTER_ITEMS, clientDatasetConfiguration.FILTER_ITEMS) &&
        Objects.equals(this.FRONTMATTER_VALS, clientDatasetConfiguration.FRONTMATTER_VALS) &&
        Objects.equals(this.IMAGE_RANGE_END_KEY, clientDatasetConfiguration.IMAGE_RANGE_END_KEY) &&
        Objects.equals(this.IMAGE_RANGE_START_KEY, clientDatasetConfiguration.IMAGE_RANGE_START_KEY) &&
        Objects.equals(this.LINES_BEFORE_SHOW_MORE, clientDatasetConfiguration.LINES_BEFORE_SHOW_MORE) &&
        Objects.equals(this.SEARCH_QUERIES, clientDatasetConfiguration.SEARCH_QUERIES) &&
        Objects.equals(this.SUGGESTED_QUERIES, clientDatasetConfiguration.SUGGESTED_QUERIES);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(CREATE_CHUNK_FEATURE, DATE_RANGE_VALUE, DOCUMENT_UPLOAD_FEATURE, FILE_NAME_KEY, FILTER_ITEMS, FRONTMATTER_VALS, IMAGE_RANGE_END_KEY, IMAGE_RANGE_START_KEY, LINES_BEFORE_SHOW_MORE, SEARCH_QUERIES, SUGGESTED_QUERIES);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientDatasetConfiguration {\n");
    sb.append("    CREATE_CHUNK_FEATURE: ").append(toIndentedString(CREATE_CHUNK_FEATURE)).append("\n");
    sb.append("    DATE_RANGE_VALUE: ").append(toIndentedString(DATE_RANGE_VALUE)).append("\n");
    sb.append("    DOCUMENT_UPLOAD_FEATURE: ").append(toIndentedString(DOCUMENT_UPLOAD_FEATURE)).append("\n");
    sb.append("    FILE_NAME_KEY: ").append(toIndentedString(FILE_NAME_KEY)).append("\n");
    sb.append("    FILTER_ITEMS: ").append(toIndentedString(FILTER_ITEMS)).append("\n");
    sb.append("    FRONTMATTER_VALS: ").append(toIndentedString(FRONTMATTER_VALS)).append("\n");
    sb.append("    IMAGE_RANGE_END_KEY: ").append(toIndentedString(IMAGE_RANGE_END_KEY)).append("\n");
    sb.append("    IMAGE_RANGE_START_KEY: ").append(toIndentedString(IMAGE_RANGE_START_KEY)).append("\n");
    sb.append("    LINES_BEFORE_SHOW_MORE: ").append(toIndentedString(LINES_BEFORE_SHOW_MORE)).append("\n");
    sb.append("    SEARCH_QUERIES: ").append(toIndentedString(SEARCH_QUERIES)).append("\n");
    sb.append("    SUGGESTED_QUERIES: ").append(toIndentedString(SUGGESTED_QUERIES)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CREATE_CHUNK_FEATURE");
    openapiFields.add("DATE_RANGE_VALUE");
    openapiFields.add("DOCUMENT_UPLOAD_FEATURE");
    openapiFields.add("FILE_NAME_KEY");
    openapiFields.add("FILTER_ITEMS");
    openapiFields.add("FRONTMATTER_VALS");
    openapiFields.add("IMAGE_RANGE_END_KEY");
    openapiFields.add("IMAGE_RANGE_START_KEY");
    openapiFields.add("LINES_BEFORE_SHOW_MORE");
    openapiFields.add("SEARCH_QUERIES");
    openapiFields.add("SUGGESTED_QUERIES");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FILE_NAME_KEY");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ClientDatasetConfiguration
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClientDatasetConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientDatasetConfiguration is not found in the empty JSON string", ClientDatasetConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClientDatasetConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClientDatasetConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ClientDatasetConfiguration.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DATE_RANGE_VALUE") != null && !jsonObj.get("DATE_RANGE_VALUE").isJsonNull()) && !jsonObj.get("DATE_RANGE_VALUE").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DATE_RANGE_VALUE` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DATE_RANGE_VALUE").toString()));
      }
      if (!jsonObj.get("FILE_NAME_KEY").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FILE_NAME_KEY` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FILE_NAME_KEY").toString()));
      }
      if ((jsonObj.get("FRONTMATTER_VALS") != null && !jsonObj.get("FRONTMATTER_VALS").isJsonNull()) && !jsonObj.get("FRONTMATTER_VALS").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FRONTMATTER_VALS` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FRONTMATTER_VALS").toString()));
      }
      if ((jsonObj.get("IMAGE_RANGE_END_KEY") != null && !jsonObj.get("IMAGE_RANGE_END_KEY").isJsonNull()) && !jsonObj.get("IMAGE_RANGE_END_KEY").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IMAGE_RANGE_END_KEY` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IMAGE_RANGE_END_KEY").toString()));
      }
      if ((jsonObj.get("IMAGE_RANGE_START_KEY") != null && !jsonObj.get("IMAGE_RANGE_START_KEY").isJsonNull()) && !jsonObj.get("IMAGE_RANGE_START_KEY").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IMAGE_RANGE_START_KEY` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IMAGE_RANGE_START_KEY").toString()));
      }
      if ((jsonObj.get("SEARCH_QUERIES") != null && !jsonObj.get("SEARCH_QUERIES").isJsonNull()) && !jsonObj.get("SEARCH_QUERIES").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SEARCH_QUERIES` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SEARCH_QUERIES").toString()));
      }
      if ((jsonObj.get("SUGGESTED_QUERIES") != null && !jsonObj.get("SUGGESTED_QUERIES").isJsonNull()) && !jsonObj.get("SUGGESTED_QUERIES").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SUGGESTED_QUERIES` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SUGGESTED_QUERIES").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientDatasetConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientDatasetConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientDatasetConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientDatasetConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientDatasetConfiguration>() {
           @Override
           public void write(JsonWriter out, ClientDatasetConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientDatasetConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClientDatasetConfiguration given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClientDatasetConfiguration
  * @throws IOException if the JSON string is invalid with respect to ClientDatasetConfiguration
  */
  public static ClientDatasetConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientDatasetConfiguration.class);
  }

 /**
  * Convert an instance of ClientDatasetConfiguration to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

