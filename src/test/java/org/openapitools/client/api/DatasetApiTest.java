/*
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ClientDatasetConfiguration;
import org.openapitools.client.model.CreateDatasetRequest;
import org.openapitools.client.model.Dataset;
import org.openapitools.client.model.DatasetAndUsage;
import org.openapitools.client.model.DeleteDatasetRequest;
import org.openapitools.client.model.ErrorResponseBody;
import java.util.UUID;
import org.openapitools.client.model.UpdateDatasetRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatasetApi
 */
@Disabled
public class DatasetApiTest {

    private final DatasetApi api = new DatasetApi();

    /**
     * Create dataset
     *
     * Create dataset  Create a new dataset. The auth&#39;ed user must be an owner of the organization to create a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDatasetTest() throws ApiException {
        String trOrganization = null;
        CreateDatasetRequest createDatasetRequest = null;
        Dataset response = api.createDataset(trOrganization, createDatasetRequest);
        // TODO: test validations
    }

    /**
     * Delete Dataset
     *
     * Delete Dataset  Delete a dataset. The auth&#39;ed user must be an owner of the organization to delete a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetTest() throws ApiException {
        String trOrganization = null;
        DeleteDatasetRequest deleteDatasetRequest = null;
        api.deleteDataset(trOrganization, deleteDatasetRequest);
        // TODO: test validations
    }

    /**
     * Get Client Configuration
     *
     * Get Client Configuration  Get the client configuration for a dataset. Will use the TR-D
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientDatasetConfigTest() throws ApiException {
        String trDataset = null;
        ClientDatasetConfiguration response = api.getClientDatasetConfig(trDataset);
        // TODO: test validations
    }

    /**
     * Get Dataset
     *
     * Get Dataset  Get a dataset by id. The auth&#39;ed user must be an admin or owner of the organization to get a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetTest() throws ApiException {
        String trOrganization = null;
        String trDataset = null;
        UUID datasetId = null;
        Dataset response = api.getDataset(trOrganization, trDataset, datasetId);
        // TODO: test validations
    }

    /**
     * Get Datasets from Organization
     *
     * Get Datasets from Organization  Get all datasets for an organization. The auth&#39;ed user must be an admin or owner of the organization to get its datasets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetsFromOrganizationTest() throws ApiException {
        String trOrganization = null;
        UUID organizationId = null;
        List<DatasetAndUsage> response = api.getDatasetsFromOrganization(trOrganization, organizationId);
        // TODO: test validations
    }

    /**
     * Update Dataset
     *
     * Update Dataset  Update a dataset. The auth&#39;ed user must be an owner of the organization to update a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDatasetTest() throws ApiException {
        String trOrganization = null;
        UpdateDatasetRequest updateDatasetRequest = null;
        Dataset response = api.updateDataset(trOrganization, updateDatasetRequest);
        // TODO: test validations
    }

}
