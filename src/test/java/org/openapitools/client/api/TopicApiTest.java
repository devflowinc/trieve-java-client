/*
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateTopicData;
import org.openapitools.client.model.DeleteTopicData;
import org.openapitools.client.model.ErrorResponseBody;
import org.openapitools.client.model.Topic;
import java.util.UUID;
import org.openapitools.client.model.UpdateTopicData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TopicApi
 */
@Disabled
public class TopicApiTest {

    private final TopicApi api = new TopicApi();

    /**
     * Create Topic
     *
     * Create Topic  Create a new chat topic. Topics are attached to a user and act as a coordinator for memory of gen-AI chat sessions. We are considering refactoring this resource of the API soon.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTopicTest() throws ApiException {
        String trDataset = null;
        CreateTopicData createTopicData = null;
        Topic response = api.createTopic(trDataset, createTopicData);
        // TODO: test validations
    }

    /**
     * Delete Topic
     *
     * Delete Topic  Delete an existing chat topic. When a topic is deleted, all associated chat messages are also deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTopicTest() throws ApiException {
        String trDataset = null;
        DeleteTopicData deleteTopicData = null;
        api.deleteTopic(trDataset, deleteTopicData);
        // TODO: test validations
    }

    /**
     * Get All Topics for User
     *
     * Get All Topics for User  Get all topics belonging to a the auth&#39;ed user. Soon, we plan to allow specification of the user for this route and include pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTopicsForUserTest() throws ApiException {
        UUID userId = null;
        String trDataset = null;
        List<Topic> response = api.getAllTopicsForUser(userId, trDataset);
        // TODO: test validations
    }

    /**
     * Update Topic
     *
     * Update Topic  Update an existing chat topic. Currently, only the name of the topic can be updated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTopicTest() throws ApiException {
        String trDataset = null;
        UpdateTopicData updateTopicData = null;
        api.updateTopic(trDataset, updateTopicData);
        // TODO: test validations
    }

}
