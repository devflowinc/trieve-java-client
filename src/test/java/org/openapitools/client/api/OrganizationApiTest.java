/*
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrganizationData;
import org.openapitools.client.model.ErrorResponseBody;
import org.openapitools.client.model.Organization;
import org.openapitools.client.model.OrganizationUsageCount;
import org.openapitools.client.model.SlimUser;
import java.util.UUID;
import org.openapitools.client.model.UpdateOrganizationData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationApi
 */
@Disabled
public class OrganizationApiTest {

    private final OrganizationApi api = new OrganizationApi();

    /**
     * Create Organization
     *
     * Create Organization  Create a new organization. The auth&#39;ed user who creates the organization will be the default owner of the organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationTest() throws ApiException {
        CreateOrganizationData createOrganizationData = null;
        Organization response = api.createOrganization(createOrganizationData);
        // TODO: test validations
    }

    /**
     * Delete Organization
     *
     * Delete Organization  Delete an organization by its id. The auth&#39;ed user must be an owner of the organization to delete it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationByIdTest() throws ApiException {
        String trOrganization = null;
        UUID organizationId = null;
        Organization response = api.deleteOrganizationById(trOrganization, organizationId);
        // TODO: test validations
    }

    /**
     * Get Organization
     *
     * Get Organization  Fetch the details of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationByIdTest() throws ApiException {
        String trOrganization = null;
        UUID organizationId = null;
        Organization response = api.getOrganizationById(trOrganization, organizationId);
        // TODO: test validations
    }

    /**
     * Get Organization Usage
     *
     * Get Organization Usage  Fetch the current usage specification of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationUsageTest() throws ApiException {
        String trOrganization = null;
        UUID organizationId = null;
        OrganizationUsageCount response = api.getOrganizationUsage(trOrganization, organizationId);
        // TODO: test validations
    }

    /**
     * Get Organization Users
     *
     * Get Organization Users  Fetch the users of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationUsersTest() throws ApiException {
        String trOrganization = null;
        UUID organizationId = null;
        List<SlimUser> response = api.getOrganizationUsers(trOrganization, organizationId);
        // TODO: test validations
    }

    /**
     * Update Organization
     *
     * Update Organization  Update an organization. Only the owner of the organization can update it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationTest() throws ApiException {
        String trOrganization = null;
        UpdateOrganizationData updateOrganizationData = null;
        Organization response = api.updateOrganization(trOrganization, updateOrganizationData);
        // TODO: test validations
    }

}
