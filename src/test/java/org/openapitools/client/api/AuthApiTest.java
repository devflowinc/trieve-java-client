/*
 * Trieve API
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: developers@trieve.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthQuery;
import org.openapitools.client.model.ErrorResponseBody;
import org.openapitools.client.model.SlimUser;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthApi
 */
@Disabled
public class AuthApiTest {

    private final AuthApi api = new AuthApi();

    /**
     * OpenID Connect callback
     *
     * OpenID Connect callback  This is the callback route for the OAuth provider, it should not be called directly. Redirects to browser with set-cookie header.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callbackTest() throws ApiException {
        SlimUser response = api.callback();
        // TODO: test validations
    }

    /**
     * Get Me
     *
     * Get Me  Get the user corresponding to your current auth credentials.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeTest() throws ApiException {
        SlimUser response = api.getMe();
        // TODO: test validations
    }

    /**
     * Login
     *
     * Login  This will redirect you to the OAuth provider for authentication with email/pass, SSO, Google, Github, etc.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        AuthQuery content = null;
        api.login(content);
        // TODO: test validations
    }

    /**
     * Logout
     *
     * Logout  Invalidate your current auth credential stored typically stored in a cookie. This does not invalidate your API key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logoutTest() throws ApiException {
        api.logout();
        // TODO: test validations
    }

}
